{"version":3,"sources":["webparts/roomFinder/BabylonRenderer.ts"],"names":[],"mappings":";;AAAA,mCAAqC;AAErC;IAAA;IAmDA,CAAC;IA9CC,8BAAW,GAAX,UAAY,MAAyB,EAAE,MAAsB;QAC3D,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QAEtB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QAEtB,uDAAuD;QACvD,IAAM,KAAK,GAAG,IAAI,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACxC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QAEpB,sDAAsD;QACtD,IAAM,MAAM,GAAG,IAAI,OAAO,CAAC,UAAU,CAAC,SAAS,EAAE,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;QAExF,0CAA0C;QAC1C,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;QAEzC,yCAAyC;QACzC,MAAM,CAAC,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAEnC,6DAA6D;QAC7D,IAAM,KAAK,GAAG,IAAI,OAAO,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;QAE1F,6DAA6D;QAC7D,KAAK,CAAC,SAAS,GAAG,GAAG,CAAC;QAEtB,kEAAkE;QAClE,IAAM,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;QAElE,wCAAwC;QACxC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;QAEtB,0EAA0E;QAC1E,IAAM,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;IACtE,CAAC;IAED,6BAAU,GAAV,UAAW,MAAyB;QAApC,iBAWC;QAVC,IAAM,MAAM,GAAG,IAAI,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAChD,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QAEjC,MAAM,CAAC,aAAa,CAAC;YACnB,KAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;QACvB,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE;YAChC,MAAM,CAAC,MAAM,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;IACL,CAAC;IACH,eAAC;AAAD,CAnDA,AAmDC,IAAA","file":"webparts/roomFinder/BabylonRenderer.js","sourcesContent":["import * as BABYLON from 'babylonjs';\n\nexport default class Renderer {\r\n  private _canvas: HTMLCanvasElement;\r\n  private _engine: BABYLON.Engine;\r\n  private _scene: BABYLON.Scene;\r\n\r\n  createScene(canvas: HTMLCanvasElement, engine: BABYLON.Engine) {\r\n    this._canvas = canvas;\r\n\r\n    this._engine = engine;\r\n\r\n    // This creates a basic Babylon Scene object (non-mesh)\r\n    const scene = new BABYLON.Scene(engine);\r\n    this._scene = scene;\r\n\r\n    // This creates and positions a free camera (non-mesh)\r\n    const camera = new BABYLON.FreeCamera(\"camera1\", new BABYLON.Vector3(0, 5, -10), scene);\r\n\r\n    // This targets the camera to scene origin\r\n    camera.setTarget(BABYLON.Vector3.Zero());\r\n\r\n    // This attaches the camera to the canvas\r\n    camera.attachControl(canvas, true);\r\n\r\n    // This creates a light, aiming 0,1,0 - to the sky (non-mesh)\r\n    const light = new BABYLON.HemisphericLight(\"light1\", new BABYLON.Vector3(0, 1, 0), scene);\r\n\r\n    // Default intensity is 1. Let's dim the light a small amount\r\n    light.intensity = 0.7;\r\n\r\n    // Our built-in 'sphere' shape. Params: name, subdivs, size, scene\r\n    const sphere = BABYLON.Mesh.CreateSphere(\"sphere1\", 16, 2, scene);\r\n\r\n    // Move the sphere upward 1/2 its height\r\n    sphere.position.y = 1;\r\n\r\n    // Our built-in 'ground' shape. Params: name, width, depth, subdivs, scene\r\n    const ground = BABYLON.Mesh.CreateGround(\"ground1\", 6, 6, 2, scene);\r\n  }\n\n  initialize(canvas: HTMLCanvasElement) {\r\n    const engine = new BABYLON.Engine(canvas, true);\r\n    this.createScene(canvas, engine);\r\n\r\n    engine.runRenderLoop(() => {\r\n      this._scene.render();\r\n    });\r\n\r\n    window.addEventListener('resize', function () {\r\n      engine.resize();\r\n    });\r\n  }\n}\n"],"sourceRoot":"..\\..\\..\\src"}